#ifndef CLOTHSPRING_H
#define CLOTHSPRING_H

/// @file   ClothParticle.h
/// @brief  this class creates the cloth springs creating the cloth struture
/// @author Navpreet Kaur Pawar
/// @version 1.0
/// @date   09/05/13 Updated to NCCA Coding standard
/// Revision History : \n
/// Initial Version : 09/05/13
/// @class Cloth
/// @brief this class creates the cloth's springs creating the cloth structure
///         and gives it the properties of streching, shear and bending
//----------------------------------------------------------------------------------------------------------------------
#include "ClothParticle.h"

class ClothSpring
{
public:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Constructor
    //----------------------------------------------------------------------------------------------------------------------
    ClothSpring();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Constructor
    ///  @param[in] _id    spring id
    ///  @param[in] *_posA pointer to cloth particle position at end A
    ///  @param[in] *_posB pointer to cloth particle position at end B
    ///  @param[in] _k     spring constant
    ///  @param[in] _d     damping coefficient
    ///  @param[in] _stype spring type
    //----------------------------------------------------------------------------------------------------------------------
    ClothSpring(
                int _id,
                ClothParticle *_posA,
                ClothParticle *_posB,
                float _k,
                float _d,
                int _stype
                );
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief start position of spring (a pointer to the cloth particle present at its end A)
    //----------------------------------------------------------------------------------------------------------------------
    ClothParticle *m_posA;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief end position of spring  (a pointer to the cloth particle present at its end B)
    //----------------------------------------------------------------------------------------------------------------------
    ClothParticle *m_posB;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief type of spring
    //----------------------------------------------------------------------------------------------------------------------
    int m_springType;

    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to get spring id
    //----------------------------------------------------------------------------------------------------------------------
    inline int getSpringID() {return m_id;}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to calculate the spring forces
    /// F = -k(|x|-d)(x/|x|) - bv where
    /// k is the spring constant
    /// |x| is the distance between the two spring points
    /// d is the distance of seperation
    /// b is the coefficient of damping larger b increases the damping force
    /// v is the relative velocity between the spring points
    /// @returns a vector of the force calculated via the RK4 integrator
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 calSpringForces();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to get the position of cloth particle at end A from the integrator
    //----------------------------------------------------------------------------------------------------------------------
    inline ngl::Vec3 getPositionA() {return m_posA->getState().m_position;}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to get the position of cloth particle at end B from the integrator
    //----------------------------------------------------------------------------------------------------------------------
    inline ngl::Vec3 getPositionB() {return m_posB->getState().m_position;}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to get the rest length of the spring
    //----------------------------------------------------------------------------------------------------------------------
    inline float getRestLength() {return m_restLen;}
    //----------------------------------------------------------------------------------------------------------------------


private:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Hooke's Law spring constant
    //----------------------------------------------------------------------------------------------------------------------
    float m_k;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief damping force
    //----------------------------------------------------------------------------------------------------------------------
    float m_damping;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief length of spring at rest
    //----------------------------------------------------------------------------------------------------------------------
    float m_restLen;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief spring id
    //----------------------------------------------------------------------------------------------------------------------
    int m_id;
    //----------------------------------------------------------------------------------------------------------------------
};

#endif // CLOTHSPRING_H
