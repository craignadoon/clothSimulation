#ifndef CLOTHPARTICLE_H
#define CLOTHPARTICLE_H

/// @file   ClothParticle.h
/// @brief  this class contains the cloth mass particles
/// @author Navpreet Kaur Pawar
/// @version 1.0
/// @date   09/05/13 Updated to NCCA Coding standard
/// Revision History : \n
/// Initial Version : 09/05/13
/// @class Cloth
/// @brief this class creates the cloth's mass particles connecting the springs together.
///         the state of the mass particle is determined by the position and velocity calculated
///         using the RK4 integrator
//----------------------------------------------------------------------------------------------------------------------
#include "AbstractRK4Integrator.h"
#include "ngl/Vec3.h"

class ClothParticle : public AbstractRK4Integrator
{
public:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Constructor
    //----------------------------------------------------------------------------------------------------------------------
    ClothParticle();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Constructor
    ///  @param[in] _pos    positon of Cloth Particle
    ///  @param[in] _vel    velocity of Cloth Particle
    ///  @param[in] _mass   mass of Cloth Particle
    ///  @param[in] _fixed  bool to determine if the particle position is fixed
    //----------------------------------------------------------------------------------------------------------------------
    ClothParticle(
                ngl::Vec3 _pos,
                ngl::Vec3 _vel,
                float _mass,
                bool _fixed
                );
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief  cloth particle mass
    //----------------------------------------------------------------------------------------------------------------------
    float m_mass;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief bool to determine if the particle position is fixed
    //----------------------------------------------------------------------------------------------------------------------
    bool m_fixed;

    //----------------------------------------------------------------------------------------------------------------------
    /// @brief forces acting on particle
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 m_force;

    //----------------------------------------------------------------------------------------------------------------------
    /// @brief time step
    //----------------------------------------------------------------------------------------------------------------------
    float m_timestep;

    //----------------------------------------------------------------------------------------------------------------------
    /// @brief current time
    //----------------------------------------------------------------------------------------------------------------------
    float m_t;

    //----------------------------------------------------------------------------------------------------------------------
    /// @brief gravity force acting on the particle
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 m_gravity;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to apply gravity on the cloth particles
    //----------------------------------------------------------------------------------------------------------------------
    void applyGravity();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to update the cloth particle position according to RK4 integrator based on the time step
    //----------------------------------------------------------------------------------------------------------------------
    void update();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief it returns the force calculated by integrator
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 motionFunction(const State &_state, float _t);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to get cloth particle position as calculated in the integrator
    //----------------------------------------------------------------------------------------------------------------------
    inline ngl::Vec3 getPosition() { return m_state.m_position;}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to get cloth particle velocity as calculated in the integrator
    //----------------------------------------------------------------------------------------------------------------------
    inline ngl::Vec3 getVelocity() { return m_state.m_velocity;}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to set current cloth particle position in the integrator
    //----------------------------------------------------------------------------------------------------------------------
    inline void setPosition(ngl::Vec3 _position) { m_state.m_position.set(_position); }
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to set current cloth particle velocity in the integrator
    //----------------------------------------------------------------------------------------------------------------------
    //inline void setVelocity(ngl::Vec3 _velocity) { m_state.m_velocity +=_velocity; }
    inline void setVelocity(ngl::Vec3 _velocity) { m_state.m_velocity.set(_velocity); }
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to fix a particle position
    //----------------------------------------------------------------------------------------------------------------------
    inline void setFixed() { m_fixed=true;}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to unfix a particle position
    //----------------------------------------------------------------------------------------------------------------------
    inline void setNotFixed() {m_fixed = false;}
    //----------------------------------------------------------------------------------------------------------------------
};

#endif // CLOTHPARTICLE_H
